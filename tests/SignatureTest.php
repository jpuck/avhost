<?php

use PHPUnit\Framework\TestCase;
use jpuck\avhost\Core\Utils\Signature;
use jpuck\avhost\Core\Configuration;

class SignatureTest extends TestCase
{
    public function getConfiguration() : Configuration
    {
        return Configuration::createFromArray([
            'hostname' => 'example.com',
            'documentRoot' => '/var/www/html',
            'meta' => [
                'realpaths' => false,
            ],
        ]);
    }

    public function test_can_instantiate_object()
    {
        $signature = new Signature($this->getConfiguration());

        $this->assertInstanceOf(Signature::class, $signature);
    }

    public function test_can_get_signature_string()
    {
        $version = getenv('AVHOST_VERSION_NUMBER');

        $datetime = date('c');

        $user = trim(`whoami`) . '@' . gethostname();

        $configuration = $this->getConfiguration();
        $contentHash = $configuration->getContentHash();

        $expected = <<<SIGNATURE
##########################################
# Generated by avhost
# https://github.com/jpuck/avhost
# version $version
# createdAt $datetime
# createdBy $user
# contentHash $contentHash
##########################################

SIGNATURE;

        $signature = new Signature($configuration);
        $actual = $signature->render();

        $this->assertSame($expected, $actual);
    }

    public function test_can_import_and_export_array()
    {
        $configuration = $this->getConfiguration();

        $expected = [
            'version' => '1.0.1',
            'createdAt' => '2017-11-24T21:56:15+00:00',
            'createdBy' => 'jeff@xervo',
        ];

        $signature = new Signature($this->getConfiguration(), $expected);

        $expected['contentHash'] = $configuration->getContentHash();
        $expected['configuration'] = $configuration->toArray();

        $actual = Signature::createFromBase64($signature->toBase64())->toArray();

        $this->assertEquals($expected, $actual);
    }
}
