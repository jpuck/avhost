<?php

use PHPUnit\Framework\TestCase;
use jpuck\avhost\Core\Utils\Signature;
use jpuck\avhost\Core\Configuration;

class SignatureTest extends TestCase
{
    public function getConfiguration(array $replace = null) : Configuration
    {
        $array = [
            'hostname' => 'example.com',
            'documentRoot' => '/var/www/html',
            'meta' => [
                'realpaths' => false,
            ],
        ];

        if (isset($replace)) {
            $array = array_replace_recursive($array, $replace);
        }

        return Configuration::createFromArray($array);
    }

    public function test_can_instantiate_object()
    {
        $signature = (new Signature)->setConfiguration($this->getConfiguration());

        $this->assertInstanceOf(Signature::class, $signature);
    }

    public function test_can_get_signature_string()
    {
        $version = '7.0.5';
        $createdAt = '2017-11-24T21:56:15+00:00';
        $createdBy = 'xenial@xervo';

        $configuration = $this->getConfiguration(['meta' => [
            'signature' => [
                'version' => $version,
                'createdAt' => $createdAt,
                'createdBy' => $createdBy,
            ],
        ]]);
        $contentHash = $configuration->getContentHash();

        $expected = <<<SIGNATURE
##########################################
# Generated by avhost
# https://github.com/jpuck/avhost
# version $version
# createdAt $createdAt
# createdBy $createdBy
# contentHash $contentHash
# configuration eyJob3N0bmFtZSI6ImV4YW1wbGUuY29tIiwiZG9jdW1lbnRSb290IjoiXC92YXJcL3d3d1wvaHRtbCIsIm1ldGEiOnsicmVhbHBhdGhzIjpmYWxzZSwic2lnbmF0dXJlIjp7InZlcnNpb24iOiI3LjAuNSIsImNyZWF0ZWRBdCI6IjIwMTctMTEtMjRUMjE6NTY6MTUrMDA6MDAiLCJjcmVhdGVkQnkiOiJ4ZW5pYWxAeGVydm8ifX0sImluZGV4ZXMiOmZhbHNlLCJvdmVycmlkZSI6Ik5vbmUiLCJmb3JiaWRkZW4iOmZhbHNlfQ==
##########################################

SIGNATURE;

        $signature = Signature::createFromArray([
            'configuration' => $configuration,
            'version' => $version,
            'createdAt' => $createdAt,
            'createdBy' => $createdBy,
        ]);

        $actual = $signature->render();

        $this->assertSame($expected, $actual);
    }

    public function test_can_import_and_export_array()
    {
        $configuration = $this->getConfiguration();

        $expected = [
            'version' => '1.0.1',
            'createdAt' => '2017-11-24T21:56:15+00:00',
            'createdBy' => 'jeff@xervo',
        ];

        $signature = Signature::createFromArray($expected);
        $signature->setConfiguration($configuration);

        $exported = $signature->toArray();
        $exported['configuration'] = $configuration->toArray();

        $actual = Signature::createFromArray($exported)->toArray();

        $this->assertEquals($expected, $actual);
    }
}
