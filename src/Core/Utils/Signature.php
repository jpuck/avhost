<?php

namespace jpuck\avhost\Core\Utils;

use jpuck\avhost\Core\Contracts\Exportable;
use jpuck\avhost\Core\Traits\SerializeJsonFromArray;

class Signature implements Exportable
{
    use SerializeJsonFromArray;

    protected $attributes;

    protected $header = <<<HEADER
##########################################
# Generated by avhost
# https://github.com/jpuck/avhost

HEADER;

    protected $footer = <<<FOOTER
##########################################

FOOTER;

    public function __construct(array $attributes = null)
    {
        $this->attributes = [
            'version' => (new Version)->getVersion(),
            'created at' => date('c'),
            'created by' => trim(`whoami`) . '@' . gethostname(),
        ];

        if (isset($attributes)) {
            $this->setAttributes($attributes);
        }
    }

    public function setAttributes(array $attributes)
    {
        foreach ($this->attributes as $key => &$value) {
            $value = $attributes[$key] ?? $value;
        }
    }

    public function toArray() : array
    {
        return $this->attributes;
    }

    public function render() : string
    {
        $string = '';
        foreach ($this->attributes as $key => $value) {
            $string .= $this->getKeyValueLine($key, $value);
        }

        return $this->header . $string . $this->footer;
    }

    public function getKeyValueLine(string $key, string $value) : string
    {
        return "# $key $value".PHP_EOL;
    }
}
